package com.example.racekatteklubbendheisino.domain;

import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotBlank;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.List;

public class Member implements UserDetails {
    private Long id;
    @NotBlank(message = "Name cannot be blank")
    private String name;
    @NotBlank(message = "Email cannot be blank")
    @Email(message = "Not a valid Email")
    private String email;
    @NotBlank(message = "Password cannot be blank")
    private String password;
    private List<Pet> pets;

    // Default constructor (required for frameworks like Spring/JDBC)
    public Member() {
        this.pets = new ArrayList<>();
    }

    // Constructor with ID (used by JdbcMemberRepository in RowMapper)
    public Member(Long id, String name, String email, String password) {
        this.id = id;
        this.name = name;
        this.email = email;
        this.password = password;
        this.pets = new ArrayList<>();
    }

    // Constructor without ID (used in MemberController for registration)
    public Member(String name, String email, String password) {
        this.name = name;
        this.email = email;
        this.password = password;
        this.pets = new ArrayList<>();
    }
    @Override
    public Collection<? extends GrantedAuthority> getAuthorities() {
        return Collections.emptyList(); // Add roles/authorities if needed
    }


    @Override
    public boolean isAccountNonExpired() {
        return true;
    }

    @Override
    public boolean isAccountNonLocked() {
        return true;
    }

    @Override
    public boolean isCredentialsNonExpired() {
        return true;
    }

    @Override
    public boolean isEnabled() {
        return true;
    }

    // Getters and setters (unchanged)
    public Long getId() { return id; }
    public void setId(Long id) { this.id = id; }
    public String getName() { return name; }
    public void setName(String name) { this.name = name; }
    public String getEmail() { return email; }
    public void setEmail(String email) { this.email = email; }
    public String getPassword() { return password; }

    @Override
    public String getUsername() {
        return name;
    }

    public void setPassword(String password) { this.password = password; }
    public List<Pet> getPets() { return pets; }
    public void setPets(List<Pet> pets) { this.pets = pets; }
}